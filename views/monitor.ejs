<!DOCTYPE html>
<html>

    <head>
        <title>Real Time Data</title>
        <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">        <!-- 3rd party free CSS -->
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>                  <!-- 3rd party free javascript -->
    </head>

    <body>
        <div class="w3-card" style="width:80%; padding: 20px; margin: auto;">
            <table class="w3-table-all">
                <tr>
                    <th class="w3-center">Power (kW)</th>
                    <th class="w3-center">Power Factor (%)</th>
                    <th class="w3-center">Frequency (Hz)</th>
                </tr>
                <tr>
                    <td class="w3-center" id="table_output_power">0</td>
                    <td class="w3-center" id="table_power_factor">0</td>
                    <td class="w3-center" id="table_frequency">0</td>
                </tr>
            </table>
        </div>

        <div>
            <canvas id="chartP" height="40px"></canvas>
        </div>

        <div>
            <canvas id="chartPf" height="40px"></canvas>
        </div>

        <div>
            <canvas id="chartF" height="40px"></canvas>
        </div>

    </body>

    <script>
        const ctxP = document.getElementById('chartP');
        const ctxPf = document.getElementById('chartPf');
        const ctxF = document.getElementById('chartF');

        var chartPower;
        var chartPowerFactor;
        var chartFrequency;

        var dataP = [];
        var dataPf = [];
        var dataF = [];

        const labels = [
             1, 2, 3, 4, 5, 6, 7, 8, 9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
        ];

        function drawCharts(){
            if (chartPower){ chartPower.destroy(); }
            if (chartPowerFactor){ chartPowerFactor.destroy(); }
            if (chartFrequency){ chartFrequency.destroy(); }
            
            chartPower = new Chart( ctxP, configGen('power (kW)', dataP, 'rgb(19, 245, 121)', {max: 260, min: 240}));
            chartPowerFactor = new Chart( ctxPf, configGen('power factor (%)', dataPf, 'rgb(0, 176, 240)', {max: 100, min: 96}) );
            chartFrequency = new Chart( ctxF, configGen('frequency (Hz)', dataF, 'rgb(23, 85, 241)', {max: 60.05, min: 59.95}));
        }

        function configGen(name, data, color, range) {
            const d = {
                labels: labels,
                datasets: [{
                    label: name,
                    backgroundColor: color,
                    borderColor: color,
                    data: data
                }]
            };
            const config = {
                type: 'line',
                data: d,
                options: {
                    // https://www.chartjs.org/docs/latest/configuration/animations.html#disabling-animation
                    animation: false,
                    scales: {
                        // https://www.chartjs.org/docs/latest/axes/#axis-range-settings
                        y: {
                            suggestedMin: range.min,
                            suggestedMax: range.max
                        }
                    }
                }
            };
            return config
        }

        function updateCharts(){
            drawCharts();

            setTimeout(() => {
                fetch('/api/data/<%= device_id %>')
                    .then((response)=>{
                        return response.json();
                    })
                    .then((json)=>{
                        document.getElementById("table_output_power").innerText = json.output_power;
                        document.getElementById("table_power_factor").innerText = json.power_factor;
                        document.getElementById("table_frequency").innerText = json.frequency;

                        dataP.push(json.output_power);
                        dataPf.push(json.power_factor);
                        dataF.push(json.frequency);
                        if (dataP.length > 60) { dataP.shift(); }
                        if (dataPf.length > 60) { dataPf.shift(); }
                        if (dataF.length > 60) { dataF.shift(); }
                        updateCharts();
                    });
            }, 1000);
        }
        updateCharts();
    </script>

</html>